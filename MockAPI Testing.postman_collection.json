{
	"info": {
		"_postman_id": "bcc343a4-2cc5-4815-bcdc-dd01575c6f45",
		"name": "MockAPI Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41489197"
	},
	"item": [
		{
			"name": "Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Status Code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify User Creation\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"John Doe\",\r\n    \"email\": \"john.doe@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a User (Replace All Data)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify User Update\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Jane Doe\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"John Doe\",\r\n    \"email\": \"john.doe@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users/64",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users",
						"64"
					]
				}
			},
			"response": []
		},
		{
			"name": "Modify Specific User Data (Email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Email Update\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.eql(\"updated.email@example.com\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"updated.email@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users/17",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users",
						"17"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify User Deletion\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users/1",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve Headers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Headers\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.header(\"content-type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "HEAD",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Available Methods",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Headers\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.header(\"content-type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "OPTIONS",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Single User by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User exists\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users/64",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users",
						"64"
					]
				}
			},
			"response": []
		},
		{
			"name": "Handle request for a non-existent user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User not found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users/9999",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users",
						"9999"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User with Missing Fields",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check for required fields\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    // If email is missing, fail the test\r",
							"    pm.expect(jsonData).to.have.property(\"email\", \"Field missing or auto-generated!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"Test User\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Duplicate User Entry",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check for duplicate user\", function () {\r",
							"    var newUser = pm.response.json();\r",
							"    \r",
							"    // Fetch all users from MockAPI\r",
							"    pm.sendRequest(\"https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users\", function (err, res) {\r",
							"        if (!err) {\r",
							"            var users = res.json();\r",
							"            var duplicateUsers = users.filter(user => user.email === newUser.email);\r",
							"\r",
							"            // If there is more than 1 user with the same email, it's a duplicate\r",
							"            pm.expect(duplicateUsers.length).to.be.below(2, \"Duplicate user detected!\");\r",
							"        }\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"John Doe\",\r\n   \"email\": \"john.doe@example.com\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User with Invalid ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update non-existent user\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Updated Name\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users/9999",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users",
						"9999"
					]
				}
			},
			"response": []
		},
		{
			"name": "Modify User with Invalid Field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Invalid field ignored\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nonExistingField\": \"SomeValue\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users/2",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Already Removed User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User already deleted\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users/1",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check API Response Headers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check headers exist\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "HEAD",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Supported Methods",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check allowed methods\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "OPTIONS",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Pagination works correctly\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.be.below(6);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users?page=1&limit=5",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "limit",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Users with Sorting",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Users are sorted by name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    for (var i = 0; i < jsonData.length - 1; i++) {\r",
							"        pm.expect(jsonData[i].name.localeCompare(jsonData[i + 1].name)).to.be.at.most(0);\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users?sortBy=name",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "sortBy",
							"value": "name"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Creating role admin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"Admin User\",\r\n   \"email\": \"admin@example.com\",\r\n   \"role\": \"admin\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Users with Filtering",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Filter users with role 'admin'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    // Filter users with role \"admin\"\r",
							"    var filteredUsers = jsonData.filter(user => user.role === \"admin\");\r",
							"\r",
							"    // Test that at least one admin user exists\r",
							"    pm.expect(filteredUsers.length).to.be.above(0, \"No admin users found!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users?role=admin",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "role",
							"value": "admin"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User with Long Input Values",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User with long name is created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name.length).to.be.above(30);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"ThisIsAVeryLongNameThatExceedsNormalLimitsAndShouldBeTested\",\r\n    \"email\": \"longinput@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/users",
					"protocol": "https",
					"host": [
						"67b9508651192bd378dd1ad1",
						"mockapi",
						"io"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://67b9508651192bd378dd1ad1.mockapi.io/api/v1/",
			"type": "string"
		}
	]
}